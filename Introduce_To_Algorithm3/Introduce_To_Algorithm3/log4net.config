<?xml version="1.0" encoding="utf-8" ?>
<log4net>

  <!--自定义配置开始-->

    <appender name="globalFatalAppender" type="log4net.Appender.RollingFileAppender">
    <!--仅输出fatal日志-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <levelToMatch value="FATAL" />
    </filter>
    <!--仅输出fatal日志 DenyAllFilter 指的是否定一定，如果被告诉允许哪一项  deny all unless instructed otherwise-->
    <filter type="log4net.Filter.DenyAllFilter" />
    <!--日志文件名，实际上只是文件夹-->
    <file value="Logs\Fatal\" />
    <!-- 设置文件的编码 -->
    <encoding value="utf-8"/>
    <!--
    支持多线程写入  Acquires the file lock for each write 每次写时，获取文件锁,这样实际上是有性能问题的，
    一种实现方式是使用队列来实现  
      -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <!--保留文件扩展名-->
    <preserveLogFileNameExtension value="true" />
    <!--使用动态文件名-->
    <StaticLogFileName value="false" />
    <!--追加到文件-->
    <appendToFile value="true" />
    <!--按时间周期改变文件名-->
    <rollingStyle value="Date" />
    <!--按小时改变文件名-->
    <!--总体来说文件名格式： Logs\Supersocket\yyyyMM\yyyymmdd\HH.error.log-->
    <datePattern value="yyyyMM\\yyyyMMdd\\HH.&quot;error.log&quot;" />
    <layout type="log4net.Layout.PatternLayout">
      <!--日期  线程名或线程号 日志级别  日志名 类名.方法名 location:引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号。警告：会影响性能。没有pdb文件的话，只有方法名，没有源文件名和行号。 信息 换行-->
      <conversionPattern value="%date [%thread] [%-5level] [%logger] [%class.%method] [%location] - %message%newline" />
    </layout>
  </appender>
  
    
  <appender name="globalErrorAppender" type="log4net.Appender.RollingFileAppender">
    <!--仅输出error日志-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <levelToMatch value="ERROR" />
    </filter>
    <!-- DenyAllFilter 指的是否定一定，如果被告诉允许哪一项  deny all unless instructed otherwise-->
    <filter type="log4net.Filter.DenyAllFilter" />
    <!--日志文件名，实际上只是文件夹-->
    <file value="Logs\Error\" />
    <!-- 设置文件的编码 -->
    <encoding value="utf-8"/>
    <!--支持多线程写入-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <!--保留文件扩展名-->
    <preserveLogFileNameExtension value="true" />
    <!--使用动态文件名-->
    <StaticLogFileName value="false" />
    <!--追加到文件-->
    <appendToFile value="true" />
    <!--按时间周期改变文件名-->
    <rollingStyle value="Date" />
    <!--按小时改变文件名-->
    <!--总体来说文件名格式： Logs\Supersocket\yyyyMM\yyyymmdd\HH.error.log-->
    <datePattern value="yyyyMM\\yyyyMMdd\\HH.&quot;error.log&quot;" />
    <layout type="log4net.Layout.PatternLayout">
      <!--日期  线程名或线程号 日志级别  日志名 类名.方法名 location:引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号。警告：会影响性能。没有pdb文件的话，只有方法名，没有源文件名和行号。 信息 换行-->
      <conversionPattern value="%date [%thread] [%-5level] [%logger] [%class.%method] [%location] - %message%newline" />
    </layout>
  </appender>

  <appender name="globalWarnAppender" type="log4net.Appender.RollingFileAppender">
    <!--仅输出warn日志-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <levelToMatch value="WARN" />
    </filter>
    <!-- DenyAllFilter 指的是否定一定，如果被告诉允许哪一项  deny all unless instructed otherwise-->
    <filter type="log4net.Filter.DenyAllFilter" />
    <!--日志文件名，实际上只是文件夹-->
    <file value="Logs\Warn\" />
    <!-- 设置文件的编码 -->
    <encoding value="utf-8"/>
    <!--支持多线程写入-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <!--保留文件扩展名-->
    <preserveLogFileNameExtension value="true" />
    <!--使用动态文件名-->
    <StaticLogFileName value="false" />
    <!--追加到文件-->
    <appendToFile value="true" />
    <!--按时间周期改变文件名-->
    <rollingStyle value="Date" />
    <!--按小时改变文件名-->
    <!--总体来说文件名格式： Logs\Supersocket\yyyyMM\yyyymmdd\HH.warn.log-->
    <datePattern value="yyyyMM\\yyyyMMdd\\HH.&quot;warn.log&quot;" />
    <layout type="log4net.Layout.PatternLayout">
      <!--日期  线程名或线程号 日志级别  日志名 类名.方法名 location:引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号。警告：会影响性能。没有pdb文件的话，只有方法名，没有源文件名和行号。 信息 换行-->
      <conversionPattern value="%date [%thread] [%-5level] [%logger] [%class.%method] [%location] - %message%newline" />
    </layout>
  </appender>

  <appender name="globalInfoAppender" type="log4net.Appender.RollingFileAppender">
    <!--输出info到FATAL的所有级别日志-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="INFO" />
      <param name="LevelMax" value="FATAL" />
    </filter>
    <!-- DenyAllFilter 指的是否定一定，如果被告诉允许哪一项  deny all unless instructed otherwise-->
    <filter type="log4net.Filter.DenyAllFilter" />
    <!--日志名，实际上只是文件夹-->
    <file value="Logs\Info\" />
    <!--utf-8文件编码-->
    <encoding value="utf-8"/>
    <!--支持多线程写入-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <!--保留文件扩展名-->
    <preserveLogFileNameExtension value="true" />
    <!--使用动态文件名-->
    <StaticLogFileName value="false" />
    <!--追加到文件-->
    <appendToFile value="true" />
    <!--按时间周期改变文件名-->
    <rollingStyle value="Date" />
    <!--按小时改变文件名-->
    <!--总体来说文件名格式： Logs\Supersocket\yyyyMM\yyyymmdd\HH.info.log-->
    <datePattern value="yyyyMM\\yyyyMMdd\\HH.&quot;info.log&quot;" />
    <layout type="log4net.Layout.PatternLayout">
      <!--日期  线程名或线程号 日志级别  日志名 类名.方法名 location:引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号。警告：会影响性能。没有pdb文件的话，只有方法名，没有源文件名和行号。 信息 换行-->
      <conversionPattern value="%date [%thread] [%-5level] [%logger] [%class.%method] [%location] - %message%newline" />
    </layout>
  </appender>
  <appender name="globalDebugAppender" type="log4net.Appender.RollingFileAppender">
    <!--仅输出debug日志-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <levelToMatch value="DEBUG" />
    </filter>
    <!--除Debug日志外不输出其它日志  DenyAllFilter 指的是否定一定，如果被告诉允许哪一项  deny all unless instructed otherwise -->
    <filter type="log4net.Filter.DenyAllFilter" />
    <!--日志名，实际上只是文件夹-->
    <file value="Logs\Debug\" />
    <!--utf-8文件编码-->
    <encoding value="utf-8"/>
    <!--支持多线程写入-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    <!--保留文件扩展名-->
    <preserveLogFileNameExtension value="true" />
    <!--使用动态文件名-->
    <StaticLogFileName value="false" />
    <!--追加到文件-->
    <appendToFile value="true" />
    <!--按时间周期改变文件名-->
    <rollingStyle value="Date" />
    <!--按小时改变文件名-->
    <!--总体来说文件名格式： Logs\Supersocket\yyyyMM\yyyymmdd\HH.debug.log-->
    <datePattern value="yyyyMM\\yyyyMMdd\\HH.&quot;debug.log&quot;" />
    <layout type="log4net.Layout.PatternLayout">
      <!--日期  线程名或线程号 日志级别  日志名 类名.方法名 location:引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号。警告：会影响性能。没有pdb文件的话，只有方法名，没有源文件名和行号。 信息 换行-->
      <conversionPattern value="%date [%thread] [%-5level] [%logger] [%class.%method] [%location] - %message%newline" />
    </layout>
  </appender>

  <!--控制台输出，天然的多线程-->
  <appender name="coloredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
    <!--输出DEBUG到FATAL的所有级别日志-->
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="DEBUG" />
      <param name="LevelMax" value="FATAL" />
    </filter>
     <!-- DenyAllFilter 指的是否定一定，如果被告诉允许哪一项  deny all unless instructed otherwise-->
    <filter type="log4net.Filter.DenyAllFilter" />
    <mapping>
      <level value="FATAL" />
      <foreColor value="Red" />
      <backColor value="White" />
    </mapping>
    <mapping>
      <level value="ERROR" />
      <foreColor value="Red, HighIntensity" />
    </mapping>
    <mapping>
      <level value="WARN" />
      <foreColor value="Yellow" />
    </mapping>
    <mapping>
      <level value="INFO" />
      <foreColor value="Cyan" />
    </mapping>
    <mapping>
      <level value="DEBUG" />
      <foreColor value="Green" />
    </mapping>
    <layout type="log4net.Layout.PatternLayout">
      <param name="Header" value="" />
      <param name="Footer" value="" />
      <!--日期  线程名或者线程号 日志级别 类名.方法名 行号 信息  -->
      <param name="ConversionPattern" value="%date [%thread] [%p] [%class.%method] [%location] -- %message%newline" />
    </layout>
  </appender>

  <root>
    <level value="ALL" />
    <appender-ref ref="globalErrorAppender" />
    <appender-ref ref="globalWarnAppender" />
    <appender-ref ref="globalInfoAppender" />
    <appender-ref ref="globalDebugAppender" />
  </root>
  
  <!--设置additivity=false切断了和root的联系，否则子日志对象集成root的Appender列表-->
  <!--定义不同的logger来支持不同的日志目录-->
  <logger name="CustomLog" additivity="false">
    <level value="ALL" />
    <appender-ref ref="globalFatalAppender" />
    <appender-ref ref="globalErrorAppender" />
    <appender-ref ref="globalWarnAppender" />
    <appender-ref ref="globalInfoAppender" />
    <appender-ref ref="globalDebugAppender" />
    <appender-ref ref="coloredConsoleAppender" />
  </logger>
</log4net>