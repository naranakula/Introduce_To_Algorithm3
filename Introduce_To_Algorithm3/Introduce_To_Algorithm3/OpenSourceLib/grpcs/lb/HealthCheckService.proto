syntax = "proto3";

//本接口用于与服务器端健康检测  由服务器端实现
package com.common.cmlu.services;

//生成C#代码时   使用的包名
option csharp_namespace = "com.common.cmlu.services";

//定义接口  安全检查服务

service HealthCheckService{
	//检测服务状态 已使用 lb用来选举服务器
	rpc HealthCheck(HealthRequest) returns (HealthResponse){}

	//拓展接口  执行命令  目前未使用
	rpc RunCommand(CommandRequest) returns (CommandResponse){}

	//是否存活  已使用 客户端用来检测是否存活
	rpc IsAlive(ServerAliveRequest) returns (ServerAliveResponse){}
}


//定义请求消息
message HealthRequest{
	string command = 1;//请求的命名
	string command_parameter = 2;//命令参数
}

//定义响应信息
message HealthResponse{
	int32 result_code = 1;//结果码  尽量使用大于等于0的数 0表示存活
	string result_desc = 2;//结果描述
	int64 weight = 3;// 服务器繁忙程度，大于等于0 ，值越大，表示越繁忙
}


//定义命令请求
message CommandRequest{
	string command = 1;//请求的命令
	string command_parameter = 2;//命令参数
}

//定义命令响应
message CommandResponse{
	int32 result_code = 1;//结果码
	string result_desc = 2;//结果描述
	string extension = 3;//拓展字段
}


message ServerAliveRequest{
	string command = 1;//请求的命令
	string command_parameter = 2;//命令参数
}


message ServerAliveResponse{
	int32 result_code = 1;//结果码  尽量使用大于等于0的数 0表示存活
	string result_desc = 2;//结果描述
	string extension = 3;//拓展字段，目前没有意义
}









