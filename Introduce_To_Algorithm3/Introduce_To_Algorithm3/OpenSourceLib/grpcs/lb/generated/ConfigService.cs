// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace com.common.cmlu.services {

  /// <summary>Holder for reflection information generated from ConfigService.proto</summary>
  public static partial class ConfigServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for ConfigService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfigServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNDb25maWdTZXJ2aWNlLnByb3RvEhhjb20uY29tbW9uLmNtbHUuc2Vydmlj",
            "ZXMiPgoQR2V0Q29uZmlnUmVxdWVzdBIPCgdjb21tYW5kGAEgASgJEhkKEWNv",
            "bW1hbmRfcGFyYW1ldGVyGAIgASgJIncKEUdldENvbmZpZ1Jlc3BvbnNlEhMK",
            "C3Jlc3VsdF9jb2RlGAEgASgFEhMKC3Jlc3VsdF9kZXNjGAIgASgJEjgKCkNv",
            "bmZpZ0xpc3QYAyADKAsyJC5jb20uY29tbW9uLmNtbHUuc2VydmljZXMuQ29u",
            "ZmlnSXRlbSI2CgpDb25maWdJdGVtEhIKCmNvbmZpZ19rZXkYASABKAkSFAoM",
            "Y29uZmlnX3ZhbHVlGAIgASgJMncKDUNvbmZpZ1NlcnZpY2USZgoJR2V0Q29u",
            "ZmlnEiouY29tLmNvbW1vbi5jbWx1LnNlcnZpY2VzLkdldENvbmZpZ1JlcXVl",
            "c3QaKy5jb20uY29tbW9uLmNtbHUuc2VydmljZXMuR2V0Q29uZmlnUmVzcG9u",
            "c2UiAEIbqgIYY29tLmNvbW1vbi5jbWx1LnNlcnZpY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::com.common.cmlu.services.GetConfigRequest), global::com.common.cmlu.services.GetConfigRequest.Parser, new[]{ "Command", "CommandParameter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.common.cmlu.services.GetConfigResponse), global::com.common.cmlu.services.GetConfigResponse.Parser, new[]{ "ResultCode", "ResultDesc", "ConfigList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.common.cmlu.services.ConfigItem), global::com.common.cmlu.services.ConfigItem.Parser, new[]{ "ConfigKey", "ConfigValue" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///请求
  /// </summary>
  public sealed partial class GetConfigRequest : pb::IMessage<GetConfigRequest> {
    private static readonly pb::MessageParser<GetConfigRequest> _parser = new pb::MessageParser<GetConfigRequest>(() => new GetConfigRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.common.cmlu.services.ConfigServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfigRequest(GetConfigRequest other) : this() {
      command_ = other.command_;
      commandParameter_ = other.commandParameter_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfigRequest Clone() {
      return new GetConfigRequest(this);
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 1;
    private string command_ = "";
    /// <summary>
    ///请求的命令
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Command {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command_parameter" field.</summary>
    public const int CommandParameterFieldNumber = 2;
    private string commandParameter_ = "";
    /// <summary>
    ///命令参数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommandParameter {
      get { return commandParameter_; }
      set {
        commandParameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Command != other.Command) return false;
      if (CommandParameter != other.CommandParameter) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Command.Length != 0) hash ^= Command.GetHashCode();
      if (CommandParameter.Length != 0) hash ^= CommandParameter.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Command.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command);
      }
      if (CommandParameter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CommandParameter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Command.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
      }
      if (CommandParameter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandParameter);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Command.Length != 0) {
        Command = other.Command;
      }
      if (other.CommandParameter.Length != 0) {
        CommandParameter = other.CommandParameter;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Command = input.ReadString();
            break;
          }
          case 18: {
            CommandParameter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///响应
  /// </summary>
  public sealed partial class GetConfigResponse : pb::IMessage<GetConfigResponse> {
    private static readonly pb::MessageParser<GetConfigResponse> _parser = new pb::MessageParser<GetConfigResponse>(() => new GetConfigResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.common.cmlu.services.ConfigServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfigResponse(GetConfigResponse other) : this() {
      resultCode_ = other.resultCode_;
      resultDesc_ = other.resultDesc_;
      configList_ = other.configList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConfigResponse Clone() {
      return new GetConfigResponse(this);
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private int resultCode_;
    /// <summary>
    ///结果码 >=0 0表示成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResultCode {
      get { return resultCode_; }
      set {
        resultCode_ = value;
      }
    }

    /// <summary>Field number for the "result_desc" field.</summary>
    public const int ResultDescFieldNumber = 2;
    private string resultDesc_ = "";
    /// <summary>
    ///结果描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResultDesc {
      get { return resultDesc_; }
      set {
        resultDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConfigList" field.</summary>
    public const int ConfigListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::com.common.cmlu.services.ConfigItem> _repeated_configList_codec
        = pb::FieldCodec.ForMessage(26, global::com.common.cmlu.services.ConfigItem.Parser);
    private readonly pbc::RepeatedField<global::com.common.cmlu.services.ConfigItem> configList_ = new pbc::RepeatedField<global::com.common.cmlu.services.ConfigItem>();
    /// <summary>
    ///配置项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::com.common.cmlu.services.ConfigItem> ConfigList {
      get { return configList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if (ResultDesc != other.ResultDesc) return false;
      if(!configList_.Equals(other.configList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResultCode != 0) hash ^= ResultCode.GetHashCode();
      if (ResultDesc.Length != 0) hash ^= ResultDesc.GetHashCode();
      hash ^= configList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResultCode);
      }
      if (ResultDesc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResultDesc);
      }
      configList_.WriteTo(output, _repeated_configList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultCode);
      }
      if (ResultDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultDesc);
      }
      size += configList_.CalculateSize(_repeated_configList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.ResultCode != 0) {
        ResultCode = other.ResultCode;
      }
      if (other.ResultDesc.Length != 0) {
        ResultDesc = other.ResultDesc;
      }
      configList_.Add(other.configList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ResultCode = input.ReadInt32();
            break;
          }
          case 18: {
            ResultDesc = input.ReadString();
            break;
          }
          case 26: {
            configList_.AddEntriesFrom(input, _repeated_configList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///单个配置项
  /// </summary>
  public sealed partial class ConfigItem : pb::IMessage<ConfigItem> {
    private static readonly pb::MessageParser<ConfigItem> _parser = new pb::MessageParser<ConfigItem>(() => new ConfigItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.common.cmlu.services.ConfigServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigItem(ConfigItem other) : this() {
      configKey_ = other.configKey_;
      configValue_ = other.configValue_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigItem Clone() {
      return new ConfigItem(this);
    }

    /// <summary>Field number for the "config_key" field.</summary>
    public const int ConfigKeyFieldNumber = 1;
    private string configKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigKey {
      get { return configKey_; }
      set {
        configKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config_value" field.</summary>
    public const int ConfigValueFieldNumber = 2;
    private string configValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigValue {
      get { return configValue_; }
      set {
        configValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigKey != other.ConfigKey) return false;
      if (ConfigValue != other.ConfigValue) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigKey.Length != 0) hash ^= ConfigKey.GetHashCode();
      if (ConfigValue.Length != 0) hash ^= ConfigValue.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConfigKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConfigKey);
      }
      if (ConfigValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConfigValue);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigKey);
      }
      if (ConfigValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigValue);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigItem other) {
      if (other == null) {
        return;
      }
      if (other.ConfigKey.Length != 0) {
        ConfigKey = other.ConfigKey;
      }
      if (other.ConfigValue.Length != 0) {
        ConfigValue = other.ConfigValue;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ConfigKey = input.ReadString();
            break;
          }
          case 18: {
            ConfigValue = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
